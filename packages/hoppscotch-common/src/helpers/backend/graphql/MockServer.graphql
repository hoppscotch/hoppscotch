import { gql } from "@urql/core"

export const MockServerDocument = gql`
  fragment MockServer on MockServer {
    id
    name
    subdomain
    userUid
    collectionID
    isActive
    createdOn
    updatedOn
    collection {
      id
      title
    }
  }
`

export const GetMyMockServersDocument = gql`
  ${MockServerDocument}
  query GetMyMockServers {
    myMockServers {
      ...MockServer
    }
  }
`

export const GetMockServerDocument = gql`
  ${MockServerDocument}
  query GetMockServer($id: ID!) {
    mockServer(id: $id) {
      ...MockServer
    }
  }
`

export const CreateMockServerDocument = gql`
  ${MockServerDocument}
  mutation CreateMockServer($input: CreateMockServerInput!) {
    createMockServer(input: $input) {
      ...MockServer
    }
  }
`

export const UpdateMockServerDocument = gql`
  ${MockServerDocument}
  mutation UpdateMockServer($id: ID!, $input: UpdateMockServerInput!) {
    updateMockServer(id: $id, input: $input) {
      ...MockServer
    }
  }
`

export const DeleteMockServerDocument = gql`
  mutation DeleteMockServer($id: ID!) {
    deleteMockServer(id: $id)
  }
`
